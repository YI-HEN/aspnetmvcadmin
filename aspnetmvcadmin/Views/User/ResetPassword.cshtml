@model vmResetPassword

@{
    ViewBag.Title = "ResetPassword";
    Layout = "~/Views/Shared/_LayoutLite.cshtml";
}
<div class="card mt-2 card-size-small m-auto">
    <div class="card-header text-white bg-primary">
        <div class="float-start"><h3>@ActionService.ViewActionName</h3></div>
        <div class="float-end"><h3>@ActionService.ViewPrgInfo</h3></div>
    </div>
    <div class="card-body">
        @using (Html.BeginForm()) 
        {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row form-group">
                    @Html.LabelFor(model => model.CurrentPassword, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                            @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />
                <div class="row form-group">
                    <div class="col-md-12">
                        <input type="submit" value="@ActionService.SaveName" class="@ActionService.ButtonClassUpdate" />
                        @Html.ActionLink(ActionService.ReturnIndex, ActionService.Index, ActionService.Controller, new { area = ActionService.Area }, new { @class = ActionService.ButtonClassReturn })
                    </div>
                </div>
            </div>
        }
    </div>
</div>

